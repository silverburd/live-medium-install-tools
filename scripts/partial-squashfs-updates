#!/bin/sh

## partial-squashfs-updates - Generate partial squashfs updates.
## Copyright (C) 2013 Richard Nelson <unixabg@gmail.com>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e
#set -x

Cleanup_mounts () {
	echo "Unmounting the areas we created."
	for mount_point in "${_MOUNTLIST}"; do
		umount $mount_point
		rmdir $mount_point
	done
}



_MOUNTDIR=""
_MOUNTLIST="./partial_squashfs_union ./partial_squashfs_updates"
_ROSTACK=""
for squash_file in $(ls ./*.squashfs); do
	# Setup mount for the squashfs images.
	# Note that we stack here on the listing provided by ls command.
	_MOUNTDIR="$(basename $squash_file .squashfs)_squashfs"
	echo "Found $squash_file and setting up mount point of ${_MOUNTDIR}"
	if [ ! -d "${_MOUNTDIR}" ]; then
		mkdir "${_MOUNTDIR}"
	fi
	mount -o loop "./$squash_file" "./${_MOUNTDIR}"
	_ROSTACK=":./${_MOUNTDIR}=rr+wh${_ROSTACK}"
	_MOUNTLIST="${_MOUNTLIST} ./${_MOUNTDIR}"
done
echo "${_ROSTACK}"
echo "${_MOUNTLIST}"

# Setup mount for the updates which we will squash later.
if [ ! -d "partial_squashfs_updates" ]; then
	mkdir partial_squashfs_updates
fi
mount -t tmpfs tmpfs ./partial_squashfs_updates

# Setup mount for the union where we stack ro squashfs and rw updates mount.
if [ ! -d "partial_squashfs_union" ]; then
	mkdir partial_squashfs_union
fi

_DEFAULTRUNTYPE="C"
echo "#############################################################"
echo "  (C)hroot - partial squashfs"
echo "  (J)oin   - combine partial squashfs to new filesystem.squashfs"
echo "Select run type (default is ${_DEFAULTRUNTYPE}):"

read _RUNTYPE

_RUNTYPE="${_RUNTYPE:-${_DEFAULTRUNTYPE}}"


if [ ${_RUNTYPE} = "C" ]
then
	#mount -t aufs -o br=./partial_squashfs_updates=rw:./filesystem_squashfs=ro none ./partial_squashfs_union
	mount -t aufs -o br=./partial_squashfs_updates=rw"${_ROSTACK}" none ./partial_squashfs_union
	echo "You selected to run a chroot"
	echo "Setup the chroot to union mount."
	echo "Mounting bindings for dev, proc, sys, pts in union."
	mount --bind /dev ./partial_squashfs_union/dev
	mount --bind /proc ./partial_squashfs_union/proc
	mount --bind /sys ./partial_squashfs_union/sys
	mount --bind /dev/pts ./partial_squashfs_union/dev/pts

	echo "Backup the union/etc/hosts."
	mv ./partial_squashfs_union/etc/hosts ./hosts.bak
	echo "Copying /etc/hosts to union/etc/hosts."
	cp /etc/hosts ./partial_squashfs_union/etc/hosts

	echo "Backup the union/etc/resolv.conf."
	mv ./partial_squashfs_union/etc/resolv.conf ./resolv.conf.bak
	echo "Copying /etc/resolv.conf to the union/etc/resolv.conf."
	cp /etc/resolv.conf ./partial_squashfs_union/etc/resolv.conf

	echo "Starting chroot in the union directory."
	chroot ./partial_squashfs_union /bin/bash

	echo "Exited the chroot so time to clean up."
	umount -l ./partial_squashfs_union/dev
	umount -l ./partial_squashfs_union/proc
	umount -l ./partial_squashfs_union/sys

	echo "Restore original union/etc/hosts."
	mv ./hosts.bak ./partial_squashfs_union/etc/hosts
	echo "Restore union/etc/resolv.conf."
	mv ./resolv.conf.bak ./partial_squashfs_union/etc/resolv.conf
	echo "Remove union/root/.bash_history."
	rm ./partial_squashfs_union/root/.bash_history

	_DATE=$(date +%Y%m%d-%H%M%S)
	echo "Now making the updated squashfs ${_DATE}."
	mksquashfs ./partial_squashfs_updates partial_squashfs_updates-${_DATE}.squashfs

	Cleanup_mounts

elif [ ${_RUNTYPE} = "J" ]
then
	# Modify the _ROSTACK to not include the filesystem_squashfs mount so we just stack the updates together
	_ROSTACK=$(echo ${_ROSTACK} | sed s@:./filesystem_squashfs=rr+wh@@g)
	echo "${_ROSTACK}"
	#mount -t aufs -o br=./partial_squashfs_updates=rw:./filesystem_squashfs=ro none ./partial_squashfs_union
	mount -t aufs -o br=./partial_squashfs_updates=rw"${_ROSTACK}" none ./partial_squashfs_union
	echo "You selected to create a new filesystem.squashfs."
	_DATE=$(date +%Y%m%d-%H%M%S)
	echo "Now making the updated squashfs ${_DATE} from untion not update."
	mksquashfs ./partial_squashfs_union partial_squashfs_updates-${_DATE}.squashfs

	#read _HOLD

	Cleanup_mounts
	# Remove old directories and move old partials out.
	if [ ! -d "partial_squashfs_updates-OLD-${_DATE}" ]; then
		mkdir partial_squashfs_updates-OOS-${_DATE}
	fi
	rsync -av --remove-source-files --exclude partial_squashfs_updates-${_DATE}.squashfs ./partial_squashfs_updates-*.squashfs ./partial_squashfs_updates-OOS-${_DATE}/
else
	echo "You entered an unknowon choice!"
	echo "Aborting."
	Cleanup_mounts
	exit 1
fi

echo "All done goodbye!"
exit 0
